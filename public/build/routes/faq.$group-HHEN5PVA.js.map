{
  "version": 3,
  "sources": ["../../../app/routes/faq.$group.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/faq.$group.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/faq.$group.jsx\");\n}\n// REMIX HMR END\n\nimport { Card, Tabs, Button, Form } from \"@shopify/polaris\";\nimport { allFaq } from \"../data/faq.server\";\nimport { useParams, useLoaderData } from \"@remix-run/react\";\nimport { useEffect, useState } from \"react\";\nimport polarisStyles from \"@shopify/polaris/build/esm/styles.css\";\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: polarisStyles\n}];\nconst FaqSingleGroup = () => {\n  _s();\n  const [filterItem, setFilterItem] = useState([]);\n  const {\n    faqs\n  } = useLoaderData();\n  const params = useParams();\n  useEffect(() => {\n    const items = faqs.filter(item => item.group === params.group);\n    setFilterItem(items);\n  }, []);\n  return <div style={{\n    padding: \"20px\"\n  }}>\n      <Card>\n        <table>\n          <tbody>\n            <tr>\n              <th>Title</th>\n              <th>Description</th>\n              <th>Edit</th>\n              <th>Delete</th>\n              <th>View Products</th>\n            </tr>\n            {filterItem?.map(item => <tr key={item.id} style={{\n            border: 0\n          }}>\n                <td>{item.question}</td>\n                <td>{item.answer}</td>\n                <td>{item.group}</td>\n              </tr>)}\n          </tbody>\n        </table>\n      </Card>\n    </div>;\n};\n_s(FaqSingleGroup, \"jqzevpMUHFPn2OkjMndIv5nMXB8=\", false, function () {\n  return [useLoaderData, useParams];\n});\n_c = FaqSingleGroup;\nexport default FaqSingleGroup;\nexport async function loader() {\n  let faqs = await allFaq();\n  return {\n    faqs\n  };\n}\nvar _c;\n$RefreshReg$(_c, \"FaqSingleGroup\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AAQAA;AACA,iBAAuB;AACvB;AACA,IAAAC,gBAAoC;AAwBtB;AA9Cd,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,gCAAkC,EAAE;AAAA,EAC7E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA2B;AAC7B;AAQO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AACD,IAAM,iBAAiB,MAAM;AAC3B,KAAG;AACH,QAAM,CAAC,YAAY,aAAa,QAAI,wBAAS,CAAC,CAAC;AAC/C,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,SAAS,UAAU;AACzB,+BAAU,MAAM;AACd,UAAM,QAAQ,KAAK,OAAO,UAAQ,KAAK,UAAU,OAAO,KAAK;AAC7D,kBAAc,KAAK;AAAA,EACrB,GAAG,CAAC,CAAC;AACL,SAAO,mDAAC,SAAI,OAAO;AAAA,IACjB,SAAS;AAAA,EACX,GACI,6DAAC,QACC,6DAAC,WACC,6DAAC,WACC;AAAA,uDAAC,QACC;AAAA,yDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,QAAG,2BAAJ;AAAA;AAAA;AAAA;AAAA,aAAe;AAAA,MACf,mDAAC,QAAG,oBAAJ;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,QAAG,sBAAJ;AAAA;AAAA;AAAA;AAAA,aAAU;AAAA,MACV,mDAAC,QAAG,6BAAJ;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,SALnB;AAAA;AAAA;AAAA;AAAA,WAMA;AAAA,IACC,yCAAY,IAAI,UAAQ,mDAAC,QAAiB,OAAO;AAAA,MAClD,QAAQ;AAAA,IACV,GACM;AAAA,yDAAC,QAAI,eAAK,YAAV;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,QAAI,eAAK,UAAV;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,MACjB,mDAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,aAAgB;AAAA,SALc,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,WAMvB;AAAA,OAdJ;AAAA;AAAA;AAAA;AAAA,SAeA,KAhBF;AAAA;AAAA;AAAA;AAAA,SAiBA,KAlBF;AAAA;AAAA;AAAA;AAAA,SAmBA,KAtBG;AAAA;AAAA;AAAA;AAAA,SAuBL;AACJ;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,eAAe,SAAS;AAClC,CAAC;AACD,KAAK;AACL,IAAO,oBAAQ;AAOf,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["init_esm", "import_react"]
}
